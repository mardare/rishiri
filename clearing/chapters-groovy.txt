
.groovy ==> ANTLR source parser ==> .java ==> ASM bytecode-framework

KEY/
	operator overloading -- unavail. in java
	native syntax regex -- e.g. =~//
	native(dedicated) syntax lists and maps -- e.g. def lst= ['a', 'b', 'c']; def mp= ['id': 1010, 'value': 12]
	native syntax for 'polymorphic iteration'??1 
	autoboxing
	augment jdk with http://docs.groovy-lang.org/latest/html/api/org/codehaus/groovy/runtime/DefaultGroovyMethods.html
	embedded dependency manager - grape via annotation @Grab
	runtime classpath control
	different classpath strategy - parent classloaders are ignored first 
	
http://grails.asia/grails-3-tutorial-setup-your-windows-development-environment

**http://grails.asia/

http://docs.groovy-lang.org/latest/html/api/groovy/lang/GroovyClassLoader.html
https://learnxinyminutes.com/docs/groovy/
https://github.com/kousen
http://groovy-lang.org/groovyconsole.html
http://mrhaki.blogspot.ro/search/label/Groovy%3AGoodness

SOAPUI/
https://www.soapui.org/scripting-properties/tips-tricks.html
https://www.soapui.org/scripting-properties/tips-tricks.html#5-1-Validate-request-XML-against-the-WSDL

http://groovyconsole.appspot.com/
http://groovyfx.org/

CLASSLOADER/
http://docs.groovy-lang.org/latest/html/api/groovy/lang/GroovyClassLoader.html

GUI/
http://mrhaki.blogspot.ro/2009/11/groovy-goodness-building-gui-with.html


Groovy Goodness
Groovy in Action
Programming Groovy 2: Dynamic Productivity for the Java Developer


Groovy compiler maps the groovy source code in a tree form called Abstract Syntax Tree (AST)
groovy => ast => groovy compiler ast-mod => bytecode
